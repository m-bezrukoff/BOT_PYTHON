# try:
# #   function()
# # except Error:
# #   # Если не сработал try и объявлена ошибка Error
# # else:
# #   # Если сработал try и не сработал except
# # finally:
# #   # Выполняется в любом случае
# #
# #
# #
# #
# # result = "several" if len(list) > 1 else "zero or one"
# #
# # [x for x in range(1, 10) if x < 5]
# # # То же в общем виде:
# #
# # [function1(item) for item in iterable if function2(item)]
# # # Можно использовать встроенную функцию filter().
# # # Она принимает функцию для фильтрации и фильтруемый список,
# # # а возвращает итератор. Чтобы получить список, мы инициализируем list() от возвращённого нам итератора:
# #
# # list(filter(lambda x: x < 5, range(1, 10)))
# # # Стоит заметить, что генератор более функционален, т.к. позволяет фильтровать
# # # по значению одной функции (например, x < 5), а вернуть в генерируемый список
# # # значение другой функции (например, x ** 2):
# #
# # [x ** 2 for x in range(1, 10) if x < 5]
# #
# # long_names_list = [name for name in bees_list if len(name) > 6]